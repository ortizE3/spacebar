@use "sass:map";
@use "../index.scss" as *;

/* ----------------------------------
   Fonts
---------------------------------- */
@font-face {
    font-family: "Eurostile Extended";
    src: url("../assets/fonts/EurostileExtended-Black.woff2") format("woff2"),
        url("../assets/fonts/EurostileExtended-Black.woff") format("woff");
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}

/* Font Families */
$font-heading: "Eurostile Extd", sans-serif;
$font-body: "Roboto", Arial, sans-serif;

/* Line Heights */
$lh-display: 1.1;
$lh-body: 1.4;

/* ----------------------------------
   Fluid Typography with Clamp
---------------------------------- */
$font-clamp: (
    h1: (min: 1.5rem, fluid: 5vw, max: 6rem),
    h2: (min: 1.3rem, fluid: 4vw, max: 5rem),
    h3: (min: 1.2rem, fluid: 3.5vw, max: 4rem),
    h4: (min: 1rem, fluid: 3vw, max: 3rem),
    h5: (min: 0.9rem, fluid: 2.5vw, max: 2.5rem),
    h6: (min: 0.8rem, fluid: 2vw, max: 2.2rem),
    base: (min: 1.1rem, fluid: 1.2vw, max: 1.3rem),
    sm: (min: 0.65rem, fluid: 1vw, max: 1.1rem)
);

/* Mixin to apply clamp font-size */
@mixin font-scale($element) {
    $size: map.get($font-clamp, $element);
    font-size: clamp(map.get($size, min), map.get($size, fluid), map.get($size, max));
}

/* ----------------------------------
   Headings
---------------------------------- */
h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: $font-heading;
    font-weight: 400;
    line-height: $lh-display;
    margin: 1em 0 0.5em;
    color: inherit;
    letter-spacing: 0.5px;
}

h1 {
    @include font-scale(h1);
}

h2 {
    @include font-scale(h2);
}

h3 {
    @include font-scale(h3);
}

h4 {
    @include font-scale(h4);
}

h5 {
    @include font-scale(h5);
    font-weight: 300;
}

h6 {
    @include font-scale(h6);
    font-weight: 300;
}

/* Large H1 variant */
.h1-lg {
    font-size: calc(clamp(1.5rem, 5vw, 6rem) * 1.3);
}

/* ----------------------------------
   Body Text
---------------------------------- */
body {
    font-family: $font-body;
    line-height: $lh-body;
    color: #111;
    margin: 0;
    padding: 0;
    -webkit-font-smoothing: antialiased;
    @include font-scale(base);
}

p {
    margin: 0 0 1em;
    line-height: $lh-body;
    @include font-scale(base);
}

small,
.muted,
.p-small {
    color: #666;
    @include font-scale(sm);
    line-height: 1.3;
}

.p-small {
    margin-bottom: 0.75em;
}

/* ----------------------------------
   Utilities
---------------------------------- */
.sb-light {
    font-weight: 300 !important;
}

.sb-normal {
    font-weight: 400 !important;
}

.sb-medium {
    font-weight: 500 !important;
}

.sb-semibold {
    font-weight: 600 !important;
}

.sb-bold {
    font-weight: 700 !important;
}

.sb-black {
    font-weight: 800 !important;
}

.text-align-left {
    text-align: left;
}

.uppercase {
    text-transform: uppercase;
}

.lowercase {
    text-transform: lowercase;
}

.secondary-font-bold {
    font-family: "Eurostile Extended" !important;
}

@keyframes grow {
    0% {
        transform: translateY(200%)
    }

    to {
        transform: translateY(0)
    }
}


.grow-container {
    display: inline-block;
    overflow: hidden;
}

.grow-text {
    transform: translateY(200%);
    animation-name: grow;
    animation-duration: .5s;
    animation-fill-mode: forwards;
}

$animation-delay: (
    1: .1s,
    2: .2s,
    3: .3s,
    4: .4s,
    5: .5s,
);

@each $key, $val in $animation-delay {
    .animation-delay-#{$key} {
        animation-delay: $val !important;
    }
}